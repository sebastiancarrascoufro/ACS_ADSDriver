«REM»
ALMA - Atacama Large Millimeter Array
(c) European Southern Observatory, 2002
(c) Associated Universities Inc., 2002
Copyright by ESO (in the framework of the ALMA collaboration),
Copyright by AUI (in the framework of the ALMA collaboration),
All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY, without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307  USA

«ENDREM»

«IMPORT org::openarchitectureware::core::meta::core»
«IMPORT org::openarchitectureware::meta::uml»
«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT alma::Control::datamodel::meta::base»
«IMPORT alma::Control::datamodel::meta::amb»
«DEFINE Root FOR DeviceModel»
    «EXPAND SWModuleDef»
«ENDDEFINE»


«DEFINE SWModuleDef FOR DeviceModel»
«FILE Assembly+"/config/"+Assembly+"_SLAVE_SIM.h"»
#ifdef «Assembly»

#ifndef «Assembly»_SLAVE_SIM_H_
#define «Assembly»_SLAVE_SIM_H_

#include <string.h>
#include <stdint.h>

/*ESTRUCTURA PARA ALMACENAR EL MENSAJE CAN*/
/*SE USA LA MISMA STRUCT QUE PARA EL PROGRAMA PRINCIPAL, PERO NO SE UTILIZARÁN LOS CAMPOS DE COMPLETION_P, CMDTYPE Y STATUS*/
typedef struct XMCMessageStruct{		//24Bytes

	uint8_t completion_p[8];	// 8bytes
	uint8_t data[8]		;	// 8bytes
	uint32_t address;       // 4bytes
	uint16_t dataLen;       // 2bytes
	uint8_t commandType;    // 1byte
	uint8_t status;         // 1Byte
} XMCMessageStruct_t;



//***poner rca
«FOREACH (Set[MonitorPoint]) MonitorPoint AS x»«IF x.isMonitored && !x.isDependent»
#define RCA_«x.MPName»				«x.RCA»«ENDIF»«ENDFOREACH» 

«FOREACH (Set[ControlPoint]) ControlPoint AS y»«IF !y.isDependent»       
#define RCA_«y.CPName»				«y.RCA»«ENDIF»«ENDFOREACH» 

/*FUNCTIONS*/
void execute_amb_command(XMCMessageStruct_t *msg);
void get_«Assembly»_data(XMCMessageStruct_t *msg);
void set_«Assembly»_data(XMCMessageStruct_t *msg);
void update_values(uint32_t ticks_count);

#endif /* «Assembly»_SLAVE_SIM_H_ */
#endif

«ENDFILE»
«ENDDEFINE»

