«REM»

ALMA - Atacama Large Millimeter Array
(c) European Southern Observatory, 2002
(c) Associated Universities Inc., 2002
Copyright by ESO (in the framework of the ALMA collaboration),
Copyright by AUI (in the framework of the ALMA collaboration),
All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY, without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307  USA

«ENDREM»

«IMPORT org::openarchitectureware::core::meta::core»
«IMPORT org::openarchitectureware::meta::uml»
«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT alma::Control::datamodel::meta::base»
«IMPORT alma::Control::datamodel::meta::eth»

«DEFINE Root FOR DeviceModel»
    «EXPAND SWModuleDef»
«ENDDEFINE»

«DEFINE SWModuleDef FOR DeviceModel»
«FILE DirPath+"/config/CDB/schemas/"+Assembly+"Base.xsd"»
<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * ALMA - Atacama Large Millimeter Array
 * (c) European Southern Observatory, 2002
 * (c) Associated Universities Inc., 2002
 * Copyright by ESO (in the framework of the ALMA collaboration),
 * Copyright by AUI (in the framework of the ALMA collaboration),
 * All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY, without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307  USA
 *
 * Warning!
 *  =========================================================
 * | This is generated code!  Do not modify this file.       |
 * | Any changes will be lost when the file is re-generated. |
 *  =========================================================
-->

<xs:schema
    attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="urn:schemas-cosylab-com:«Assembly»Base:1.0"
    xmlns="urn:schemas-cosylab-com:«Assembly»Base:1.0"
    xmlns:baci="urn:schemas-cosylab-com:BACI:1.0"
    xmlns:cdb="urn:schemas-cosylab-com:CDB:1.0"
«IF Extends != "none"»
    xmlns:exteth="urn:schemas-cosylab-com:«Extends»:1.0" 
«ELSE»
    xmlns:eth="urn:schemas-cosylab-com:EthernetDevice:1.0"
«ENDIF»
    xmlns:extcontrol="urn:schemas-cosylab-com:ControlDevice:1.0"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import
        namespace="urn:schemas-cosylab-com:CDB:1.0"
        schemaLocation="http://www.eso.org/schemas/ACS/CDB.xsd"></xs:import>
    <xs:import
        namespace="urn:schemas-cosylab-com:BACI:1.0"
        schemaLocation="http://www.eso.org/schemas/ACS/BACI.xsd"></xs:import>
«IF Extends != "none"»
    <xs:import
        namespace="urn:schemas-cosylab-com:«Extends»:1.0"
        schemaLocation="http://www.nrao.edu/schemas/CONTROL/«Extends».xsd"></xs:import>
«ELSE»
    <xs:import
        namespace="urn:schemas-cosylab-com:EthernetDevice:1.0"
        schemaLocation="http://www.nrao.edu/schemas/CONTROL/EthernetDevice.xsd"></xs:import>
«ENDIF»
    <xs:import
        namespace="urn:schemas-cosylab-com:ControlDevice:1.0"
        schemaLocation="http://www.nrao.edu/schemas/CONTROL/ControlDevice.xsd"></xs:import>
    <xs:complexType
        name="«Assembly»Base">
        <xs:complexContent>
            <xs:extension
                base="extcontrol:ControlDevice">
                <xs:sequence>
    «FOREACH MonitorPoint AS x»
        «IF x.isMonitored»
          «IF x.DisplayUnits == "pattern"»
                    <xs:element
                        name="«x.MPName»"
                        type ="baci:ROpattern"></xs:element>
          «ELSE»
            «IF x.isDataArray»
                    <xs:element
                        name="«x.MPName»"
                        type ="baci:RO«x.DataToBACIType»Seq"></xs:element>
            «ELSE»
                    <xs:element
                        name="«x.MPName»"
                        type ="baci:RO«x.DataToBACIType»"></xs:element>
            «ENDIF»
          «ENDIF»
        «ENDIF»
    «ENDFOREACH»
                    <xs:element
                       name="EthernetConfig">
                        <xs:complexType>   
                            <xs:complexContent>
                                <xs:restriction
                                    base="eth:EthernetConfig">
                                    <!-- Hostname that will be used to initiate
                                    the connection.  It is up to the
                                    implementation to resolve the name to a
                                    valid IP4 address. -->
                                    <xs:attribute
                                        name="hostname"
                                        type="xs:string"
                                        use="required"></xs:attribute>
                                    <!-- Port on the target computer, i.e. the
                                    one with the hardware device, that is used
                                    for the connection.  It is up to the
                                    implementation if the port is used only for
                                    communication establishment or for the data
                                    transport, too. -->
                                    <xs:attribute
                                       name="port"
                                       type="xs:unsignedShort"
                                       use="required"></xs:attribute>
                                   <!-- This will be used as deviceUniqueId.
                                   Since Ethernet devices do not have any AMBSI
                                   which come with a unique device ID, the
                                   unique MAC address of the Ethernet interface
                                   of the host running the hardware has been
                                   chosen to serve as it instead. -->
                                    <xs:attribute
                                       name="macAddress"
                                       type="xs:string"
                                       use="required"></xs:attribute>
                                    <!-- Number of allowed retries after a
                                        communication failure.  The initial
                                        first communication attempt shall not be
                                        counted against the retries. -->
                                    <xs:attribute
                                       name="retries"
                                       type="xs:unsignedShort"
                                       use="required"></xs:attribute>
                                    <!-- Tx/Rx timeout in s. -->
                                    <xs:attribute
                                       name="timeoutRxTx"
                                       type="xs:double"
                                       use="required"></xs:attribute>
                                    <!-- Time span in s before the OS closes the
                                        socket after the application has
                                        actively closed the socket.  This is
                                        from man 7 socket:

                                        "When enabled, a close(2) or shutdown(2)
                                        will not return until all queued
                                        messages for the socket have been
                                        successfully sent or the linger timeout
                                        has been reached.  Otherwise, the call
                                        returns immediately and the closing is
                                        done in the background.  When the socket
                                        is closed as part of exit(2), it always
                                        lingers in the background." -->
                                    <xs:attribute
                                       name="lingerTime"
                                       type="xs:unsignedInt"
                                       use="required"></xs:attribute>
                                </xs:restriction>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element
        name="«Assembly»Base"
        type="«Assembly»Base"></xs:element>
</xs:schema>
«ENDFILE»
«ENDDEFINE»
